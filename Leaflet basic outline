<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Campus Map Test</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <style>
        #map {
            height: 100vh;
            width: 100%;
        }
    </style>
</head>
<body>
    <div id="map"></div>
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        // Define actual image size
        var imageWidth = 2550;
        var imageHeight = 3037;

        // Scale factor to make it easier to work with
        var scaleFactor = 0.4;  // Adjust this if needed
        var scaledWidth = imageWidth * scaleFactor;
        var scaledHeight = imageHeight * scaleFactor;

        // Initialize the map with appropriate bounds
        var map = L.map('map', {
            minZoom: -2, // Allow more zooming out
            maxZoom: 5,
            center: [scaledHeight / 2, scaledWidth / 2], // Center the map properly
            zoom: -1, // Start zoomed out
            crs: L.CRS.Simple
        });

        // Load the scaled campus map PNG
        var imageUrl = 'umbc_map.png.jpg';
        var imageBounds = [[0, 0], [scaledHeight, scaledWidth]];

        L.imageOverlay(imageUrl, imageBounds).addTo(map);
        map.fitBounds(imageBounds);

        // Scale the Engineering Building coordinates
        function scaleCoordinates(coord) {
            return [scaledHeight - (coord[0] * scaleFactor), coord[1] * scaleFactor];
        }

        // Engineering Building Polygon
        L.polygon([
            scaleCoordinates([1350, 1000]), // Bottom-left
            scaleCoordinates([1350, 900]), // Bottom-right
            scaleCoordinates([1260, 900]),  // Top-right
            scaleCoordinates([1260, 1000])   // Top-left
        ], {color: "blue", fillOpacity: 0.4}).addTo(map)
        .bindPopup("Engineering Building");
    </script>
</body>
</html>
